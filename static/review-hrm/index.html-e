
<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <title>退伍七週複習計畫 一之 練手 Spring Boot 與 Vue.js 實現簡易人事管理系統</title>
    <meta name="HandheldFriendly" content="True">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" type="text/css" href="../assets/built/screen.css?v=2e48d3575f">

    <link rel="shortcut icon" href="../favicon.ico" type="image/x-icon">
    <link rel="canonical" href="index.html">
    <meta name="referrer" content="no-referrer-when-downgrade">
    <link rel="amphtml" href="amp/index.html">
    
    <meta property="og:site_name" content="Davis Ching">
    <meta property="og:type" content="article">
    <meta property="og:title" content="退伍七週複習計畫 一之 練手 Spring Boot 與 Vue.js 實現簡易人事管理系統">
    <meta property="og:description" content="使用 Spring Boot 與 Vue.js 實現一個簡易的人事管理系統 (資料庫採用 MySQL)。">
    <meta property="og:url" content="http://localhost:2373/review-hrm/">
    <meta property="og:image" content="http://localhost:2373/content/images/2020/04/Snip20200425_2.png">
    <meta property="article:published_time" content="2020-04-25T09:05:40.000Z">
    <meta property="article:modified_time" content="2020-04-26T05:45:01.000Z">
    <meta property="article:tag" content="侬好，Java Dev">
    
    <meta property="article:publisher" content="https://www.facebook.com/ghost">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="退伍七週複習計畫 一之 練手 Spring Boot 與 Vue.js 實現簡易人事管理系統">
    <meta name="twitter:description" content="使用 Spring Boot 與 Vue.js 實現一個簡易的人事管理系統 (資料庫採用 MySQL)。">
    <meta name="twitter:url" content="http://localhost:2373/review-hrm/">
    <meta name="twitter:image" content="http://localhost:2373/content/images/2020/04/Snip20200425_2.png">
    <meta name="twitter:label1" content="Written by">
    <meta name="twitter:data1" content="Davis · 景詩維 ">
    <meta name="twitter:label2" content="Filed under">
    <meta name="twitter:data2" content="侬好，Java Dev">
    <meta name="twitter:site" content="@tryghost">
    <meta property="og:image:width" content="1500">
    <meta property="og:image:height" content="580">
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "Davis Ching",
        "logo": {
            "@type": "ImageObject",
            "url": "http://localhost:2373/favicon.ico",
            "width": 48,
            "height": 48
        }
    },
    "author": {
        "@type": "Person",
        "name": "Davis · 景詩維 ",
        "image": {
            "@type": "ImageObject",
            "url": "http://localhost:2373/content/images/2019/12/Snip20191217_3.png",
            "width": 1278,
            "height": 1276
        },
        "url": "http://localhost:2373/author/davis/",
        "sameAs": []
    },
    "headline": "退伍七週複習計畫 一之 練手 Spring Boot 與 Vue.js 實現簡易人事管理系統",
    "url": "http://localhost:2373/review-hrm/",
    "datePublished": "2020-04-25T09:05:40.000Z",
    "dateModified": "2020-04-26T05:45:01.000Z",
    "image": {
        "@type": "ImageObject",
        "url": "http://localhost:2373/content/images/2020/04/Snip20200425_2.png",
        "width": 1500,
        "height": 580
    },
    "keywords": "侬好，Java Dev",
    "description": "使用 Spring Boot 與 Vue.js 實現一個簡易的人事管理系統 (資料庫採用 MySQL)。",
    "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "http://localhost:2373/"
    }
}
    </script>

    <meta name="generator" content="Ghost 3.1">
    <link rel="alternate" type="application/rss+xml" title="Davis Ching" href="../rss/index.html">
    <link href="https://fonts.font.im/css?family=Lobster" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Noto+Serif+SC:200,300,400,500,600,700,900&amp;display=swap&amp;subset=chinese-simplified" rel="stylesheet" type="text/css">

<style>
    h1 > a {
        font-size: 1.7em;
        font-weight: 700;
        color: #373737;
        font-family: 'Lobster', cursive;
    }

    body,
    .post-content,
    .post-full-content a,
    [class^="icon-"]:before, [class*=" icon-"]:before 
    { font-family:"Noto Serif SC", sans-serif;
      font-size: 14pt;
      font-weight: 300;
      color: #566573;  
    }
    
    .post-full-content h1, .post-full-content h2,
    .post-full-content h3, .post-full-content h4,
    .post-full-content h5, .post-full-content h6,
    .post-card-excerpt > p {
        font-family:"Noto Serif SC", sans-serif;
    }
    
    pre, .post-full-content pre {
    background: #2d2d2d;
    }
    
    .nav .nav-shua-xin-man-guo-nei-ban a {
       color: #7d2d2d;
    }
    
</style>
<link href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.10/styles/tomorrow-night-eighties.min.css" rel="stylesheet">

</head>
<body class="post-template tag-hello-java-dev">
    <div class="site-wrapper">
        <header class="site-header outer no-image">
    <div class="inner">
        <div class="site-header-content">
            <h1 class="site-title">
                <a href="../">
                    Davis Ching
                </a>
            </h1>
            <h5 class="site-date">
            </h5>
        </div>
        <nav class="site-nav">
    <div class="site-nav-center">
        <div class="site-nav-left">
        </div>
            <ul class="nav" role="menu">
    <li class="nav-zhu-ye" role="menuitem"><a href="../">主頁</a></li>
    <li class="nav-guan-yu" role="menuitem"><a href="../author/davis/">關於</a></li>
    <li class="nav-jie-jue-hui-zong" role="menuitem"><a href="../tag/problem-solved-yeah/">解決匯總</a></li>
    <li class="nav-fen-san-shi-xi-tong" role="menuitem"><a href="../tag/distributed-system/">分散式系統</a></li>
</ul>

        <div class="site-nav-right">
            <div class="social-links">
                    <a class="social-link social-link-fb" href="https://www.facebook.com/ghost" title="Facebook" target="_blank" rel="noopener"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path d="M19 6h5V0h-5c-3.86 0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z"></path></svg>
</a>
                    <a class="social-link social-link-tw" href="https://twitter.com/tryghost" title="Twitter" target="_blank" rel="noopener"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path d="M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z"></path></svg>
</a>
            </div>
                <a class="rss-button" href="https://feedly.com/i/subscription/feed/http://localhost:2373/rss/" title="RSS" target="_blank" rel="noopener"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><circle cx="6.18" cy="17.82" r="2.18"></circle><path d="M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z"></path></svg>
</a>
        </div>
    </div>
</nav>
    </div>
    <script>
        function updateDate() {
            var date = new Date();
            var element = document.querySelector('.site-date');
            var dayNames = [
                "Sunday", "Monday", "Tuesday",
                "Wednesday", "Thursday", "Friday", "Saturday"
            ];
            var monthNames = [
                "January", "February", "March",
                "April", "May", "June", "July",
                "August", "September", "October",
                "November", "December"
            ];

            var dayIndex = date.getDay();
            var day = date.getDate();
            var monthIndex = date.getMonth();
            var year = date.getFullYear();

            element.innerHTML = dayNames[dayIndex] + ' ' + monthNames[monthIndex] + ' ' + day + ' ' + year;
        }
        updateDate();
    </script>
</header>
        


<main id="site-main" class="site-main outer">
    <div class="inner">
        <article class="post-full post tag-hello-java-dev ">
            <figure class="post-hero-image">
                <div class="post-hero-image-title">
                    <section class="post-full-meta">
                        <time class="post-full-meta-date" datetime="2020-04-25">25 April 2020</time>
                            <span class="date-divider">/</span> <a href="../tag/hello-java-dev/">侬好，Java Dev</a>
                    </section>
                    <h1 class="post-full-title">退伍七週複習計畫 一之 練手 Spring Boot 與 Vue.js 實現簡易人事管理系統</h1>
                </div>
                <img srcset="../content/images/size/w300/2020/04/Snip20200425_2.png 300w,
                           ../content/images/size/w600/2020/04/Snip20200425_2.png 600w,
                          ../content/images/size/w1000/2020/04/Snip20200425_2. png 1000w,
                         ../content/images/size/w2000/2020/04/Snip20200425_2.pngpng 2000w" sizes="(max-width: 800px) 400px,
                            (max-width: 1170px) 700px,
                            1400px" src="../content/images/size/w2000/2020/04/Snip20200425_2.png" alt="退伍七週複習計畫 一之 練手 Spring Boot 與 Vue.js 實現簡易人事管理系統">
            </figure>

            <section class="post-full-content">
                <div class="post-content">
                    <!--kg-card-begin: markdown--><blockquote>
<p>四個月的役期到現在剩下七週時間，長時間在兵營裡，也逐漸遺忘了一些技術，因此在最後的這段時間，利用每週短暫放假的一天半，對一些技術進行複習。這裏將會使用 Spring Boot 與 Vue.js 實現一個簡易的人事管理系統 (資料庫採用 MariaDB)。</p>
</blockquote>
<h2 id="springsecurity">壹 ｜Spring Security 安全架構</h2>
<p>Spring Security 是一種針對企業系統訪問時的安全問題，進行安全管理的一種架構，主要可以控制如：密碼加密、表單安全管理、驗證、命名空間安全管理等操作。該項目將只會採用一些最基本的功能，對該項目進行一些安全保護。</p>
<p>這個框架之所以能夠進行安全管理，主要是因為它大量的依賴了 Servlet 的過濾器 (Filter) 功能。也就是開發者封裝了大量針對安全管理的過濾器，方便我們對自己的項目安全管理方面能夠更快的完成處置。其中，安全管理主要包含以下兩個操作：認證與授權。</p>
<h3 id="">資料庫準備</h3>
<p>首先登陸資料庫，並創建新的資料庫與表單：</p>
<pre><code class="language-sql">create database hrm;
use hrm;
drop table if exists `user`;
create table `user` (
	id bigint(20) not null auto_increment primary key,
  username varchar(32) comment '帳號',
  password varchar(16) comment '密碼',
  nickname varchar(32) default '' comment '暱稱'
) engine=innodb default charset=utf8mb4;
</code></pre>
<p>檢查表是否成功創建：</p>
<!--kg-card-end: markdown--><figure class="kg-card kg-image-card"><img src="../content/images/2020/04/Snip20200425_1.png" class="kg-image"></figure><!--kg-card-begin: markdown--><h3 id="springsecurity">Spring Security 小練習</h3>
<p>在此之前，先創建一個小項目，練習一下 Spring Security 的基本操作。首先，創建一個新的 maven 項目，採用 <code>maven-archetype-quickstart</code> 並命名為 <code>SpringSecurityPractice</code> 並修改其依賴 <code>pom.xml</code>為以下內容：</p>
<pre><code class="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

  &lt;groupId&gt;pers.dc&lt;/groupId&gt;
  &lt;artifactId&gt;SpringSecurityPractice&lt;/artifactId&gt;
  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;

  &lt;name&gt;SpringSecurityPractice&lt;/name&gt;
  &lt;!-- FIXME change it to the project's website --&gt;
  &lt;url&gt;http://www.example.com&lt;/url&gt;

    &lt;parent&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
        &lt;version&gt;2.2.6.RELEASE&lt;/version&gt;
    &lt;/parent&gt;

  &lt;properties&gt;
    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
    &lt;maven.compiler.source&gt;1.7&lt;/maven.compiler.source&gt;
    &lt;maven.compiler.target&gt;1.7&lt;/maven.compiler.target&gt;
  &lt;/properties&gt;

  &lt;dependencies&gt;
      &lt;dependency&gt;
          &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
          &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
          &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
          &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
          &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
          &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
          &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
          &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
          &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
          &lt;artifactId&gt;lombok&lt;/artifactId&gt;
          &lt;version&gt;1.18.12&lt;/version&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
          &lt;groupId&gt;org.mariadb.jdbc&lt;/groupId&gt;
          &lt;artifactId&gt;mariadb-java-client&lt;/artifactId&gt;
          &lt;version&gt;2.6.0&lt;/version&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
      &lt;groupId&gt;junit&lt;/groupId&gt;
      &lt;artifactId&gt;junit&lt;/artifactId&gt;
      &lt;version&gt;4.11&lt;/version&gt;
      &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;

  &lt;build&gt;
    &lt;pluginManagement&gt;&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;
      &lt;plugins&gt;
          &lt;plugin&gt;
              &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
              &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
              &lt;executions&gt;
                  &lt;execution&gt;
                      &lt;goals&gt;
                          &lt;goal&gt;repackage&lt;/goal&gt;
                      &lt;/goals&gt;
                  &lt;/execution&gt;
              &lt;/executions&gt;
          &lt;/plugin&gt;
        &lt;!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle --&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt;
          &lt;version&gt;3.1.0&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;
          &lt;version&gt;3.0.2&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
          &lt;version&gt;3.8.0&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
          &lt;version&gt;2.22.1&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;
          &lt;version&gt;3.0.2&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;
          &lt;version&gt;2.5.2&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;
          &lt;version&gt;2.8.2&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle --&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-site-plugin&lt;/artifactId&gt;
          &lt;version&gt;3.7.1&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt;
          &lt;version&gt;3.0.0&lt;/version&gt;
        &lt;/plugin&gt;
      &lt;/plugins&gt;
    &lt;/pluginManagement&gt;
  &lt;/build&gt;
&lt;/project&gt;
</code></pre>
<p>而後創建一個簡單的實體類 <code>UserDO</code>：</p>
<pre><code class="language-java">package pers.dc.entity;

import lombok.Data;

import javax.persistence.*;

@Entity
@Table(name = "user")
@Data
public class UserDO {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    private String username;

    private String password;

    private String nickname;
}
</code></pre>
<p><strong>DAO 層</strong><br>
並建立一個 <code>UserRepository</code> 接口用來進行復用，減少重複代碼：</p>
<pre><code class="language-java">package pers.dc.repository;

import org.springframework.data.repository.CrudRepository;
import org.springframework.stereotype.Repository;
import pers.dc.entity.UserDO;

@Repository
public interface UserRepository extends CrudRepository&lt;UserDO, Long&gt; {

    UserDO findByUsername(String username);
}
</code></pre>
<p><strong>Service層</strong><br>
建立 <code>UserService</code>:</p>
<pre><code class="language-java">package pers.dc.service;

import pers.dc.entity.UserDO;

public interface UserService {
    void insert(UserDO userDO);
    UserDO getByUsername(String username);
}
</code></pre>
<p>之後建立一個 Service 接口：</p>
<pre><code class="language-java">package pers.dc.service.impl;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.crypto.password.Pbkdf2PasswordEncoder;
import org.springframework.security.crypto.password.StandardPasswordEncoder;
import org.springframework.security.crypto.scrypt.SCryptPasswordEncoder;
import pers.dc.entity.UserDO;
import pers.dc.repository.UserRepository;
import pers.dc.service.UserService;
import sun.security.util.Password;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;

public class BaseUserService implements UserService {

    private final static Map&lt;Integer, String&gt; ENCODER_TYPE = new HashMap&lt;&gt;();
    private final static Map&lt;String, PasswordEncoder&gt; ENCODER_MAP = new HashMap&lt;&gt;();
    private final static String PASSWORD_FORMAT = "{%s}%s";
    private final UserRepository userRepository;

    public BaseUserService(UserRepository userRepository) {
        this.userRepository = userRepository;
    }

    static {
        ENCODER_TYPE.put(0, "noop");
        ENCODER_TYPE.put(1, "bcrypt");
        ENCODER_TYPE.put(2, "pbkdf2");
        ENCODER_TYPE.put(3, "scrypt");
        ENCODER_TYPE.put(4, "sha256");
        ENCODER_MAP.put("noop", NoOpPasswordEncoder.getInstance());
        ENCODER_MAP.put("bcrypt", new BCryptPasswordEncoder());
        ENCODER_MAP.put("pbkdf2", new Pbkdf2PasswordEncoder());
        ENCODER_MAP.put("scrypt", new SCryptPasswordEncoder());
        ENCODER_MAP.put("sha256", new StandardPasswordEncoder());
    }

    @Override
    public void insert(UserDO userDO) {
        String username = userDO.getUsername();
        if (exist(username))
            throw new RuntimeException("用戶名已經存在!");

        Random random = new Random();
        int x = random.nextInt(5);
        String encoderType = ENCODER_TYPE.get(x);
        PasswordEncoder passwordEncoder = ENCODER_MAP.get(encoderType);
        userDO.setPassword(String.format(PASSWORD_FORMAT, encoderType,
                passwordEncoder.encode(userDO.getPassword())));
        userRepository.save(userDO);
    }

    @Override
    public UserDO getByUsername(String username) {
        return userRepository.findByUsername(username);
    }

    private boolean exist(String username) {
        UserDO userDO = userRepository.findByUsername(username);
        return userDO != null;
    }
}
</code></pre>
<p>這裏分別提供了這幾種加密方式：noop、bcrypt、pbkdf2、scrypt、sha256。</p>
<p><strong>Controller層</strong><br>
新建一個 <code>UserController</code> :</p>
<pre><code class="language-java">package pers.dc.controller;

import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;

import java.security.Principal;

@Controller
public class UserController {

    @GetMapping("/user")
    public String user(@AuthenticationPrincipal Principal principal, Model model) {
        model.addAttribute("username", principal.getName());
        return "user/user";
    }
}
</code></pre>
<p><code>@AuthenticationPrincipal</code> 註解可以獲取保存在 session 中登陸用戶的信息，這樣就可以獲取登陸後的 username 了。</p>
<p>新建 <code>HomeController</code>類：</p>
<pre><code class="language-java">package pers.dc.controller;

import lombok.AllArgsConstructor;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import pers.dc.entity.UserDO;
import pers.dc.service.UserService;

@Controller
@AllArgsConstructor
public class HomeController {

    private final UserService userService;

    @GetMapping({"/", "/index", "home"})
    public String root() {
        return "index";
    }

    @GetMapping("/login")
    public String login() {
        return "login";
    }

    @GetMapping("/register")
    public String register() {
        return "register";
    }

    @PostMapping("register")
    public String doRegister(UserDO userDO) {
        userService.insert(userDO);
        return "redirect:register?success";
    }
}
</code></pre>
<p><strong>Config層</strong><br>
創建一個 <code>DbUserDetailsService</code> 來管理整個項目配置：</p>
<pre><code class="language-java">package pers.dc.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;
import pers.dc.entity.UserDO;
import pers.dc.service.UserService;

import java.util.ArrayList;
import java.util.List;

@Service
public class DbUserDetailsService implements UserDetailsService {

    private final UserService userService;

    @Autowired
    DbUserDetailsService(UserService userService) {
        this.userService = userService;
    }

    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
        UserDO userDO = userService.getByUsername(username);
        if (userDO == null)
            throw new UsernameNotFoundException("用戶不存在！");
        List&lt;SimpleGrantedAuthority&gt; simpleGrantedAuthorities = new ArrayList&lt;&gt;();
        simpleGrantedAuthorities.add(new SimpleGrantedAuthority("USER"));
        return new org.springframework.security.core.userdetails.User(
                userDO.getUsername(), userDO.getPassword(), simpleGrantedAuthorities);
    }
}

</code></pre>
<p>創建一個 WebSecurityConfig</p>
<pre><code class="language-java">package pers.dc.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

public class WebSecurityConfig extends WebSecurityConfigurerAdapter {
    private DbUserDetailsService dbUserDetailsService;

    @Autowired
    public void setDbUserDetailsService(DbUserDetailsService dbUserDetailsService) {
        this.dbUserDetailsService = dbUserDetailsService;
    }

    @Override
    protected void configure(HttpSecurity http) throws Exception {
        http.authorizeRequests()
                .antMatchers("/").permitAll()
                .antMatchers("/user/**").hasAuthority("USER")
                .and()
                .formLogin().loginPage("/login").defaultSuccessUrl("/user")
                .and()
                .logout().logoutUrl("/logout").logoutSuccessUrl("/login");
    }

    @Override
    protected void configure(AuthenticationManagerBuilder builder) throws Exception{
        builder.userDetailsService(dbUserDetailsService);
    }
}
</code></pre>
<p><strong>建立啟動類和配置文件</strong><br>
建立 <code>App</code>:</p>
<pre><code class="language-java">package pers.dc;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class App {
    public static void main(String[] args) {
        SpringApplication.run(App.class, args);
    }
}
</code></pre>
<p>建立配置文件 <code>application.properties</code> 於 <code>src/main/resources</code>:</p>
<pre><code class="language-properties">spring.thymeleaf.cache=false

spring.datasource.url=jdbc:mysql://localhost:3306/hrm?useUnicode=true&amp;characterEncoding=utf8mb4
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=Aa941211

jpa.hibernate.ddl-auto:update
jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
</code></pre>
<!--kg-card-end: markdown-->
                </div>
            </section>


            <footer class="post-full-footer">


                    
<section class="author-card">
        <img class="author-profile-image" src="../content/images/size/w100/2019/12/Snip20191217_3.png" alt="Davis · 景詩維 ">
    <section class="author-card-content">
        <h4 class="author-card-name"><a href="../author/davis/">Davis · 景詩維 </a></h4>
            <p>Read <a href="../author/davis/">more posts</a> by this author.</p>
    </section>
</section>
<div class="post-full-footer-right">
    <a class="author-card-button" href="../author/davis/">Read More</a>
</div>


            </footer>


        </article>

    </div>
</main>

<aside class="read-next outer">
    <div class="inner">
        <div class="read-next-feed">
                <article class="read-next-card" style="background-image: url(../content/images/size/w600/2020/01/thumb-1920-657227.jpg)">
                    <header class="read-next-card-header">
                        <small class="read-next-card-header-sitetitle">— Davis Ching —</small>
                        <h3 class="read-next-card-header-title"><a href="../tag/hello-java-dev/">侬好，Java Dev</a></h3>
                    </header>
                    <div class="read-next-divider"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path d="M13 14.5s2 3 5 3 5.5-2.463 5.5-5.5S21 6.5 18 6.5c-5 0-7 11-12 11C2.962 17.5.5 15.037.5 12S3 6.5 6 6.5s4.5 3.5 4.5 3.5"></path></svg>
</div>
                    <div class="read-next-card-content">
                        <ul>
                            <li><a href="../online-store-on-google/">通過 Google Cloud 架設電商系統</a></li>
                            <li><a href="../distributed-system-01/">分散式系統 - 學習筆記 - 壹</a></li>
                            <li><a href="../spring-boot-profiles/">Spring Boot 多環境佈署 profile</a></li>
                        </ul>
                    </div>
                    <footer class="read-next-card-footer">
                        <a href="../tag/hello-java-dev/">See all 4 posts →</a>
                    </footer>
                </article>


                <article class="post-card post tag-hello-java-dev ">

    <a class="post-card-image-link" href="../online-store-on-google/">
        <img class="post-card-image" srcset="../content/images/size/w300/2020/04/Snip20200328_1.png 300w,
                   ../content/images/size/w600/2020/04/Snip20200328_1.png 600w,
                  ../content/images/size/w1000/2020/04/Snip20200328_1. png 1000w,
                 ../content/images/size/w2000/2020/04/Snip20200328_1.pngpng 2000w" sizes="(max-width: 1000px) 400px, 700px" src="../content/images/size/w600/2020/04/Snip20200328_1.png" alt="通過 Google Cloud 架設電商系統">
    </a>

    <div class="post-card-content">

        <a class="post-card-content-link" href="../online-store-on-google/">

            <header class="post-card-header">
                    <span class="post-card-tags">侬好，Java Dev</span>
                <h2 class="post-card-title">通過 Google Cloud 架設電商系統</h2>
            </header>

            <section class="post-card-excerpt">
                <p>之前有嘗試過在阿里雲將一個 Spring Boot - Mybatis 架構的系統，通過 CentOS 上的 Tomcat 架設一個電商系統。現在將嘗試在 Google Cloud 的 Compute Engine 上架設同一套系統，以下是對這一過程的紀錄</p>
            </section>

        </a>

        <footer class="post-card-meta">

            <ul class="author-list">
                <li class="author-list-item">

                    <div class="author-name-tooltip">
                        Davis · 景詩維 
                    </div>

                        <a href="../author/davis/" class="static-avatar">
                            <img class="author-profile-image" src="../content/images/size/w100/2019/12/Snip20191217_3.png" alt="Davis · 景詩維 ">
                        </a>
                </li>
            </ul>

            <span class="post-date">Thursday April 02 2020</span>
        </footer>

    </div>

</article>

        </div>
    </div>
</aside>

<div class="floating-header">
    <div class="floating-header-logo">
        <a href="../">
            <span>Davis Ching</span>
        </a>
    </div>
    <span class="floating-header-divider">—</span>
    <div class="floating-header-title">退伍七週複習計畫 一之 練手 Spring Boot 與 Vue.js 實現簡易人事管理系統</div>
    <div class="floating-header-share">
        <div class="floating-header-share-label">Share this <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24">
    <path d="M7.5 15.5V4a1.5 1.5 0 1 1 3 0v4.5h2a1 1 0 0 1 1 1h2a1 1 0 0 1 1 1H18a1.5 1.5 0 0 1 1.5 1.5v3.099c0 .929-.13 1.854-.385 2.748L17.5 23.5h-9c-1.5-2-5.417-8.673-5.417-8.673a1.2 1.2 0 0 1 1.76-1.605L7.5 15.5zm6-6v2m-3-3.5v3.5m6-1v2"></path>
</svg>
</div>
        <a class="floating-header-share-tw" href="https://twitter.com/share?text=%E9%80%80%E4%BC%8D%E4%B8%83%E9%80%B1%E8%A4%87%E7%BF%92%E8%A8%88%E7%95%AB%20%E4%B8%80%E4%B9%8B%20%E7%B7%B4%E6%89%8B%20Spring%20Boot%20%E8%88%87%20Vue.js%20%E5%AF%A6%E7%8F%BE%E7%B0%A1%E6%98%93%E4%BA%BA%E4%BA%8B%E7%AE%A1%E7%90%86%E7%B3%BB%E7%B5%B1&amp;url=http://localhost:2373/review-hrm/" onclick="window.open(this.href, 'share-twitter', 'width=550,height=235');return false;">
            <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path d="M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z"></path></svg>
        </a>
        <a class="floating-header-share-fb" href="https://www.facebook.com/sharer/sharer.php?u=http://localhost:2373/review-hrm/" onclick="window.open(this.href, 'share-facebook','width=580,height=296');return false;">
            <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path d="M19 6h5V0h-5c-3.86 0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z"></path></svg>
        </a>
    </div>
    <progress id="reading-progress" class="progress" value="0">
        <div class="progress-container">
            <span class="progress-bar"></span>
        </div>
    </progress>
</div>



        <footer class="site-footer outer">
    <div class="site-footer-content inner">
        <section class="copyright"><a href="../">Davis Ching</a> © 2020</section>
        <nav class="site-footer-nav">
            <a href="../">Latest Posts</a>
            <a href="https://www.facebook.com/ghost" target="_blank" rel="noopener">Facebook</a>
            <a href="https://twitter.com/tryghost" target="_blank" rel="noopener">Twitter</a>
                <a href="https://feedly.com/i/subscription/feed/http://localhost:2373/rss/" target="_blank" rel="noopener">Feedly</a>
        </nav>
    </div>
</footer>
    </div>


    <script>
        var images = document.querySelectorAll('.kg-gallery-image img');
        images.forEach(function (image) {
            var container = image.closest('.kg-gallery-image');
            var width = image.attributes.width.value;
            var height = image.attributes.height.value;
            var ratio = width / height;
            container.style.flex = ratio + ' 1 0%';
        })
    </script>


    <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous">
    </script>
    <script type="text/javascript" src="../assets/built/jquery.fitvids.js?v=2e48d3575f"></script>


    <script>

// NOTE: Scroll performance is poor in Safari
// - this appears to be due to the events firing much more slowly in Safari.
//   Dropping the scroll event and using only a raf loop results in smoother
//   scrolling but continuous processing even when not scrolling
$(document).ready(function () {
    // Start fitVids
    var $postContent = $(".post-full-content");
    $postContent.fitVids();
    // End fitVids

    var progressBar = document.querySelector('#reading-progress');
    var header = document.querySelector('.floating-header');
    var title = document.querySelector('.post-full-title');

    var lastScrollY = window.scrollY;
    var lastWindowHeight = window.innerHeight;
    var lastDocumentHeight = $(document).height();
    var ticking = false;

    function onScroll() {
        lastScrollY = window.scrollY;
        requestTick();
    }

    function onResize() {
        lastWindowHeight = window.innerHeight;
        lastDocumentHeight = $(document).height();
        requestTick();
    }

    function requestTick() {
        if (!ticking) {
            requestAnimationFrame(update);
        }
        ticking = true;
    }

    function update() {
        var trigger = title.getBoundingClientRect().top + window.scrollY;
        var triggerOffset = title.offsetHeight + 35;
        var progressMax = lastDocumentHeight - lastWindowHeight;

        // show/hide floating header
        if (lastScrollY >= trigger + triggerOffset) {
            header.classList.add('floating-active');
        } else {
            header.classList.remove('floating-active');
        }

        progressBar.setAttribute('max', progressMax);
        progressBar.setAttribute('value', lastScrollY);

        ticking = false;
    }

    window.addEventListener('scroll', onScroll, {passive: true});
    window.addEventListener('resize', onResize, false);

    update();

});
</script>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.10/highlight.min.js"></script> 
<script>hljs.initHighlightingOnLoad();</script>

</body>
